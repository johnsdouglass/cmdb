{{- if .Values.ingress.enabled -}}
{{- $fullName := include "chart-app.fullname" . -}}
{{- $appName := include "chart-app.name" . -}}
{{- $service := index .Values.services 0 -}}
{{- $servicePort := include "portspec" (dict "ports" $service.ports "portname" "http") -}}
{{- $serviceGrpcPort := include "portspec" (dict "ports" $service.ports "portname" "grpc") -}}
{{- $ingressPath := .Values.ingress.path -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}
{{- if .Values.cmdb }}
  namespace: {{ .Values.nameSpace }}
{{- end }}
  labels:
    app: {{ $appName }}
    chart: {{ template "chart-app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- with .Values.ingress.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ . }}
      http:
        paths:
          - path: {{ $ingressPath }}/v1
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $servicePort }}
  {{- end }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}-doc
{{- if .Values.cmdb }}
  namespace: {{ .Values.nameSpace }}
{{- end }}
  labels:
    app: {{ $appName }}
    chart: {{ template "chart-app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ . }}
      http:
        paths:
          - path: {{ $ingressPath }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $servicePort }}
  {{- end }}

{{- end }}