{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "CMDB",
    "contact": {
      "name": "Soheil Eizadi",
      "url": "https://github.com/seizadi/cmdb",
      "email": "seizadi@gmail.com"
    },
    "version": "1.0"
  },
  "basePath": "/v1/",
  "paths": {
    "/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to retrieve all the Applications.",
        "operationId": "ApplicationsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListApplicationsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to create a Application information.",
        "operationId": "ApplicationsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplication"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateApplicationResponse"
            }
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to read a Application information by identifier.",
        "operationId": "ApplicationsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadApplicationResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to update a Application information.",
        "operationId": "ApplicationsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplication"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateApplicationResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to delete a particular Application.",
        "operationId": "ApplicationsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to update a Application information.",
        "operationId": "ApplicationsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplication"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateApplicationResponse"
            }
          }
        }
      }
    },
    "/artifacts": {
      "get": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to retrieve all the Artifacts.",
        "operationId": "ArtifactsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListArtifactsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to create a Artifact information.",
        "operationId": "ArtifactsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbArtifact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateArtifactResponse"
            }
          }
        }
      }
    },
    "/artifacts/{id}": {
      "get": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to read a Artifact information by identifier.",
        "operationId": "ArtifactsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadArtifactResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to update a Artifact information.",
        "operationId": "ArtifactsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbArtifact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateArtifactResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to delete a particular Artifact.",
        "operationId": "ArtifactsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to update a Artifact information.",
        "operationId": "ArtifactsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbArtifact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateArtifactResponse"
            }
          }
        }
      }
    },
    "/aws_rds_instances": {
      "get": {
        "tags": [
          "AwsRdsInstances"
        ],
        "summary": "Use this method to retrieve all the AwsRdsInstances.",
        "operationId": "AwsRdsInstancesList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListAwsRdsInstancesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AwsRdsInstances"
        ],
        "summary": "Use this method to create a AwsRdsInstance information.",
        "operationId": "AwsRdsInstancesCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAwsRdsInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateAwsRdsInstanceResponse"
            }
          }
        }
      }
    },
    "/aws_rds_instances/{id}": {
      "get": {
        "tags": [
          "AwsRdsInstances"
        ],
        "summary": "Use this method to read a AwsRdsInstance information by identifier.",
        "operationId": "AwsRdsInstancesRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadAwsRdsInstanceResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AwsRdsInstances"
        ],
        "summary": "Use this method to update a AwsRdsInstance information.",
        "operationId": "AwsRdsInstancesUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAwsRdsInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateAwsRdsInstanceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AwsRdsInstances"
        ],
        "summary": "Use this method to delete a particular AwsRdsInstance.",
        "operationId": "AwsRdsInstancesDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "AwsRdsInstances"
        ],
        "summary": "Use this method to update a AwsRdsInstance information.",
        "operationId": "AwsRdsInstancesUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAwsRdsInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateAwsRdsInstanceResponse"
            }
          }
        }
      }
    },
    "/aws_services": {
      "get": {
        "tags": [
          "AwsServices"
        ],
        "summary": "Use this method to retrieve all the AwsServices.",
        "operationId": "AwsServicesList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListAwsServicesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AwsServices"
        ],
        "summary": "Use this method to create a AwsService information.",
        "operationId": "AwsServicesCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAwsService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateAwsServiceResponse"
            }
          }
        }
      }
    },
    "/aws_services/{id}": {
      "get": {
        "tags": [
          "AwsServices"
        ],
        "summary": "Use this method to read a AwsService information by identifier.",
        "operationId": "AwsServicesRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadAwsServiceResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AwsServices"
        ],
        "summary": "Use this method to update a AwsService information.",
        "operationId": "AwsServicesUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAwsService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateAwsServiceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AwsServices"
        ],
        "summary": "Use this method to delete a particular AwsService.",
        "operationId": "AwsServicesDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "AwsServices"
        ],
        "summary": "Use this method to update a AwsService information.",
        "operationId": "AwsServicesUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAwsService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateAwsServiceResponse"
            }
          }
        }
      }
    },
    "/cloud_providers": {
      "get": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to retrieve all the CloudProviders.",
        "operationId": "CloudProvidersList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListCloudProvidersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to create a CloudProvider information.",
        "operationId": "CloudProvidersCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbCloudProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateCloudProviderResponse"
            }
          }
        }
      }
    },
    "/cloud_providers/{id}": {
      "get": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to read a CloudProvider information by identifier.",
        "operationId": "CloudProvidersRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadCloudProviderResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to update a CloudProvider information.",
        "operationId": "CloudProvidersUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbCloudProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateCloudProviderResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to delete a particular CloudProvider.",
        "operationId": "CloudProvidersDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to update a CloudProvider information.",
        "operationId": "CloudProvidersUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbCloudProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateCloudProviderResponse"
            }
          }
        }
      }
    },
    "/containers": {
      "get": {
        "tags": [
          "Containers"
        ],
        "summary": "Use this method to retrieve all the Containers.",
        "operationId": "ContainersList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListContainersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Containers"
        ],
        "summary": "Use this method to create a Container information.",
        "operationId": "ContainersCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbContainer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateContainerResponse"
            }
          }
        }
      }
    },
    "/containers/{id}": {
      "get": {
        "tags": [
          "Containers"
        ],
        "summary": "Use this method to read a Container information by identifier.",
        "operationId": "ContainersRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadContainerResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Containers"
        ],
        "summary": "Use this method to update a Container information.",
        "operationId": "ContainersUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbContainer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateContainerResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Containers"
        ],
        "summary": "Use this method to delete a particular Container.",
        "operationId": "ContainersDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Containers"
        ],
        "summary": "Use this method to update a Container information.",
        "operationId": "ContainersUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbContainer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateContainerResponse"
            }
          }
        }
      }
    },
    "/deployments": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to retrieve all the Deployments.",
        "operationId": "DeploymentsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListDeploymentsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to create a Deployment information.",
        "operationId": "DeploymentsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbDeployment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateDeploymentResponse"
            }
          }
        }
      }
    },
    "/deployments/{id}": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to read a Deployment information by identifier.",
        "operationId": "DeploymentsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadDeploymentResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to update a Deployment information.",
        "operationId": "DeploymentsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbDeployment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateDeploymentResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to delete a particular Deployment.",
        "operationId": "DeploymentsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to update a Deployment information.",
        "operationId": "DeploymentsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbDeployment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateDeploymentResponse"
            }
          }
        }
      }
    },
    "/environments": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to retrieve all the Environments.",
        "operationId": "EnvironmentsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListEnvironmentsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to create a Environment information.",
        "operationId": "EnvironmentsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbEnvironment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateEnvironmentResponse"
            }
          }
        }
      }
    },
    "/environments/{id}": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to read a Environment information by identifier.",
        "operationId": "EnvironmentsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadEnvironmentResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to update a Environment information.",
        "operationId": "EnvironmentsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbEnvironment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateEnvironmentResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to delete a particular Environment.",
        "operationId": "EnvironmentsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to update a Environment information.",
        "operationId": "EnvironmentsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbEnvironment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateEnvironmentResponse"
            }
          }
        }
      }
    },
    "/kube_clusters": {
      "get": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to retrieve all the KubeClusters.",
        "operationId": "KubeClustersList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListKubeClustersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to create a KubeCluster information.",
        "operationId": "KubeClustersCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbKubeCluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateKubeClusterResponse"
            }
          }
        }
      }
    },
    "/kube_clusters/{id}": {
      "get": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to read a KubeCluster information by identifier.",
        "operationId": "KubeClustersRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadKubeClusterResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to update a KubeCluster information.",
        "operationId": "KubeClustersUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbKubeCluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateKubeClusterResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to delete a particular KubeCluster.",
        "operationId": "KubeClustersDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to update a KubeCluster information.",
        "operationId": "KubeClustersUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbKubeCluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateKubeClusterResponse"
            }
          }
        }
      }
    },
    "/manifests": {
      "get": {
        "tags": [
          "Manifests"
        ],
        "summary": "Use this method to retrieve all the Manifests.",
        "operationId": "ManifestsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListManifestsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manifests"
        ],
        "summary": "Use this method to create a Manifest information.",
        "operationId": "ManifestsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbManifest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateManifestResponse"
            }
          }
        }
      }
    },
    "/manifests/{id}": {
      "get": {
        "tags": [
          "Manifests"
        ],
        "summary": "Use this method to read a Manifest information by identifier.",
        "operationId": "ManifestsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadManifestResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Manifests"
        ],
        "summary": "Use this method to update a Manifest information.",
        "operationId": "ManifestsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbManifest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateManifestResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manifests"
        ],
        "summary": "Use this method to delete a particular Manifest.",
        "operationId": "ManifestsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Manifests"
        ],
        "summary": "Use this method to update a Manifest information.",
        "operationId": "ManifestsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbManifest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateManifestResponse"
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to retrieve all the Regions.",
        "operationId": "RegionsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListRegionsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to create a Region information.",
        "operationId": "RegionsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbRegion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateRegionResponse"
            }
          }
        }
      }
    },
    "/regions/{id}": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to read a Region information by identifier.",
        "operationId": "RegionsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadRegionResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to update a Region information.",
        "operationId": "RegionsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbRegion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateRegionResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to delete a particular Region.",
        "operationId": "RegionsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to update a Region information.",
        "operationId": "RegionsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbRegion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateRegionResponse"
            }
          }
        }
      }
    },
    "/secrets": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to retrieve all the Secrets.",
        "operationId": "SecretsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListSecretsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to create a Secret information.",
        "operationId": "SecretsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbSecret"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateSecretResponse"
            }
          }
        }
      }
    },
    "/secrets/{id}": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to read a Secret information by identifier.",
        "operationId": "SecretsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadSecretResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to update a Secret information.",
        "operationId": "SecretsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbSecret"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateSecretResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to delete a particular Secret.",
        "operationId": "SecretsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to update a Secret information.",
        "operationId": "SecretsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbSecret"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateSecretResponse"
            }
          }
        }
      }
    },
    "/vaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to retrieve all the Vaults.",
        "operationId": "VaultsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListVaultsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to create a Vault information.",
        "operationId": "VaultsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVault"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateVaultResponse"
            }
          }
        }
      }
    },
    "/vaults/{id}": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to read a Vault information by identifier.",
        "operationId": "VaultsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadVaultResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to update a Vault information.",
        "operationId": "VaultsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVault"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateVaultResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to delete a particular Vault.",
        "operationId": "VaultsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to update a Vault information.",
        "operationId": "VaultsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVault"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateVaultResponse"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Cmdb"
        ],
        "operationId": "CmdbGetVersion",
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbVersionResponse"
            }
          }
        }
      }
    },
    "/version_tags": {
      "get": {
        "tags": [
          "VersionTags"
        ],
        "summary": "Use this method to retrieve all the VersionTags.",
        "operationId": "VersionTagsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbListVersionTagsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "VersionTags"
        ],
        "summary": "Use this method to create a VersionTag information.",
        "operationId": "VersionTagsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVersionTag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/cmdbCreateVersionTagResponse"
            }
          }
        }
      }
    },
    "/version_tags/{id}": {
      "get": {
        "tags": [
          "VersionTags"
        ],
        "summary": "Use this method to read a VersionTag information by identifier.",
        "operationId": "VersionTagsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/cmdbReadVersionTagResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VersionTags"
        ],
        "summary": "Use this method to update a VersionTag information.",
        "operationId": "VersionTagsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVersionTag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateVersionTagResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VersionTags"
        ],
        "summary": "Use this method to delete a particular VersionTag.",
        "operationId": "VersionTagsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "VersionTags"
        ],
        "summary": "Use this method to update a VersionTag information.",
        "operationId": "VersionTagsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVersionTag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/cmdbUpdateVersionTagResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "apiPageInfo": {
      "description": "PageInfo represents both server-driven and client-driven pagination response.\nServer-driven pagination is a model in which the server returns some\namount of data along with an token indicating there is more data\nand where subsequent queries can get the next page of data.\nClient-driven pagination is a model in which rows are addressable by\noffset and page size (limit).",
      "type": "object",
      "properties": {
        "offset": {
          "description": "The service may optionally include the offset of the next page of resources.\nA null value indicates no more pages.",
          "type": "integer",
          "format": "int32"
        },
        "page_token": {
          "description": "The service response should contain a string to indicate\nthe next page of resources.\nA null value indicates no more pages.",
          "type": "string"
        },
        "size": {
          "description": "The service may optionally include the total number of resources being paged.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "cmdbApplication": {
      "type": "object",
      "title": "-----------------------------------------------------------------------\nApplication represents application definition used by an Environment\n-----------------------------------------------------------------------",
      "properties": {
        "app_name": {
          "type": "string",
          "title": "The Application Name"
        },
        "containers": {
          "type": "array",
          "title": "Containers used by this Application",
          "items": {
            "$ref": "#/definitions/cmdbContainer"
          }
        },
        "deployment": {
          "title": "Deployment of this Application",
          "$ref": "#/definitions/cmdbDeployment"
        },
        "description": {
          "type": "string",
          "title": "The description of the Application"
        },
        "environment_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "manifest": {
          "title": "Manifest used by this Application",
          "$ref": "#/definitions/cmdbManifest"
        },
        "manifest_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "The name of the Application"
        },
        "repo": {
          "type": "string",
          "title": "Application Repository URL"
        },
        "version_tag": {
          "title": "VersionTag setting of this Application",
          "$ref": "#/definitions/cmdbVersionTag"
        },
        "version_tag_id": {
          "description": "The resource identifier.",
          "type": "string"
        }
      }
    },
    "cmdbArtifact": {
      "type": "object",
      "title": "---------------------------------------------------------------------\nArtifact represents an element built by CI (e.g. resolved manifest)\n---------------------------------------------------------------------",
      "properties": {
        "commit": {
          "type": "string",
          "title": "The commit Id of the Artifact in repo"
        },
        "description": {
          "type": "string",
          "title": "The description of the Artifact"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the Artifact"
        },
        "repo": {
          "type": "string",
          "title": "The repo which stores the Artifact"
        },
        "version_tag_id": {
          "description": "The resource identifier.",
          "type": "string"
        }
      }
    },
    "cmdbAwsRdsInstance": {
      "type": "object",
      "title": "--------------------------------------------------------\nAwsRdsInstance represents a particular AWS RDS Instance\n--------------------------------------------------------",
      "properties": {
        "aws_service_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "database_host": {
          "type": "string",
          "title": "Host URL of the AwsRdsInstance (e.g. cmdb.cf1k7otqh6nf.us-east-1.rds.amazonaws.com)"
        },
        "database_name": {
          "type": "string",
          "title": "Name of the database created for use by the application"
        },
        "database_password": {
          "title": "Secret database password which must be with the user credentials to access database",
          "$ref": "#/definitions/cmdbSecret"
        },
        "database_user": {
          "type": "string",
          "title": "User credentials for access to the database"
        },
        "description": {
          "type": "string",
          "title": "The description of the AwsRdsInstance"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the AwsRdsInstance"
        }
      }
    },
    "cmdbAwsService": {
      "type": "object",
      "title": "------------------------------------------------------\nAwsService represents a set of AWS Services used by the Application\n------------------------------------------------------",
      "properties": {
        "aws_rds_instances": {
          "type": "array",
          "title": "Reference to the AwsRds Instances",
          "items": {
            "$ref": "#/definitions/cmdbAwsRdsInstance"
          }
        },
        "description": {
          "type": "string",
          "title": "The description of the AwsService"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the AwsService"
        }
      }
    },
    "cmdbCloudProvider": {
      "type": "object",
      "title": "------------------------------------------------------------------------\nCloudProvider represents a particular Cloud Provider e.g. AWS or Azure\n------------------------------------------------------------------------",
      "properties": {
        "account": {
          "type": "string",
          "title": "Cloud Provider Account Number"
        },
        "description": {
          "type": "string",
          "title": "The description of the CloudProvider"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the CloudProvider"
        },
        "provider": {
          "title": "The Provider",
          "$ref": "#/definitions/cmdbProvider"
        },
        "regions": {
          "type": "array",
          "title": "Regions for the CloudProvider",
          "items": {
            "$ref": "#/definitions/cmdbRegion"
          }
        }
      }
    },
    "cmdbContainer": {
      "type": "object",
      "title": "------------------------------------------------------------------------\nContainer represents a Docker Image that has been loaded to a Registry\n------------------------------------------------------------------------",
      "properties": {
        "application_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "container_name": {
          "type": "string",
          "title": "The unique container name referenced helm charts"
        },
        "description": {
          "type": "string",
          "title": "The description of the container"
        },
        "digest": {
          "type": "string",
          "title": "The digest of the image to check integrity (e.g. digest: sha256:9bf4971079f0ddf3f4ed8681dc96c2610804007359643809165f94a95bc5c3b6)"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "image_pull_policy": {
          "type": "string",
          "title": "The image pull"
        },
        "image_repo": {
          "type": "string",
          "title": "The docker image repository (e.g. soheileizadi/cmdb-server)"
        },
        "image_tag": {
          "type": "string",
          "title": "The docker image tag (e.g. latest)"
        },
        "name": {
          "type": "string",
          "title": "The name of the container"
        }
      }
    },
    "cmdbCreateApplicationResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbApplication"
        }
      }
    },
    "cmdbCreateArtifactResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbArtifact"
        }
      }
    },
    "cmdbCreateAwsRdsInstanceResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbAwsRdsInstance"
        }
      }
    },
    "cmdbCreateAwsServiceResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbAwsService"
        }
      }
    },
    "cmdbCreateCloudProviderResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbCloudProvider"
        }
      }
    },
    "cmdbCreateContainerResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbContainer"
        }
      }
    },
    "cmdbCreateDeploymentResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbDeployment"
        }
      }
    },
    "cmdbCreateEnvironmentResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbEnvironment"
        }
      }
    },
    "cmdbCreateKubeClusterResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbKubeCluster"
        }
      }
    },
    "cmdbCreateManifestResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbManifest"
        }
      }
    },
    "cmdbCreateRegionResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbRegion"
        }
      }
    },
    "cmdbCreateSecretResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbSecret"
        }
      }
    },
    "cmdbCreateVaultResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbVault"
        }
      }
    },
    "cmdbCreateVersionTagResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbVersionTag"
        }
      }
    },
    "cmdbDeployment": {
      "type": "object",
      "title": "---------------------------------------------------------------------\nDeployment represents a particular Application running on Kubernetes\n---------------------------------------------------------------------",
      "properties": {
        "application_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "artifact": {
          "title": "Artifact for resolved manifest used for the Application",
          "$ref": "#/definitions/cmdbArtifact"
        },
        "artifact_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "The description of the Deployment"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "kube_cluster": {
          "title": "Kubernetes Cluster on which the Application is deployed",
          "$ref": "#/definitions/cmdbKubeCluster"
        },
        "kube_cluster_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "The name of the Deployment"
        }
      }
    },
    "cmdbEnvironment": {
      "type": "object",
      "title": "-------------------------------------------------------------\nEnvironment owns a set of Applications for Deployment\nsee Code for whether it is in Dev, Preprod or Prod Stages\n-------------------------------------------------------------",
      "properties": {
        "applications": {
          "type": "array",
          "title": "Applications in this Environment",
          "items": {
            "$ref": "#/definitions/cmdbApplication"
          }
        },
        "code": {
          "title": "Code defines the various stages e.g. dev, qa, preprod, prod",
          "$ref": "#/definitions/cmdbStage"
        },
        "description": {
          "type": "string",
          "title": "The description of the Environment"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the Environment"
        },
        "region_id": {
          "description": "The resource identifier.",
          "type": "string"
        }
      }
    },
    "cmdbKubeCluster": {
      "type": "object",
      "title": "------------------------------------------------------\nKubeCluster represents a particular AWS Region\n------------------------------------------------------",
      "properties": {
        "description": {
          "type": "string",
          "title": "The description of the KubeCluster"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the KubeCluster"
        }
      }
    },
    "cmdbListApplicationsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbApplication"
          }
        }
      }
    },
    "cmdbListArtifactsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbArtifact"
          }
        }
      }
    },
    "cmdbListAwsRdsInstancesResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbAwsRdsInstance"
          }
        }
      }
    },
    "cmdbListAwsServicesResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbAwsService"
          }
        }
      }
    },
    "cmdbListCloudProvidersResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbCloudProvider"
          }
        }
      }
    },
    "cmdbListContainersResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbContainer"
          }
        }
      }
    },
    "cmdbListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbDeployment"
          }
        }
      }
    },
    "cmdbListEnvironmentsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbEnvironment"
          }
        }
      }
    },
    "cmdbListKubeClustersResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbKubeCluster"
          }
        }
      }
    },
    "cmdbListManifestsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbManifest"
          }
        }
      }
    },
    "cmdbListRegionsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbRegion"
          }
        }
      }
    },
    "cmdbListSecretsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbSecret"
          }
        }
      }
    },
    "cmdbListVaultsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbVault"
          }
        }
      }
    },
    "cmdbListVersionTagsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/apiPageInfo"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cmdbVersionTag"
          }
        }
      }
    },
    "cmdbManifest": {
      "type": "object",
      "title": "--------------------------------------------------------------------------\nManifest represents all the elements needed for running Application\n--------------------------------------------------------------------------",
      "properties": {
        "affinity": {
          "title": "Affinity used for Kubernetes Deployment YAML",
          "$ref": "#/definitions/typesJSONValue"
        },
        "artifact": {
          "title": "Artifact used by this Manifest",
          "$ref": "#/definitions/cmdbArtifact"
        },
        "artifact_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "aws_service": {
          "title": "AWS Service used by this Manifest",
          "$ref": "#/definitions/cmdbAwsService"
        },
        "aws_service_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "commit": {
          "type": "string",
          "title": "repo commit Id"
        },
        "description": {
          "type": "string",
          "title": "The description of the Manifest"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "ingress": {
          "title": "Ingress used for Kubernetes Ingress YAML",
          "$ref": "#/definitions/typesJSONValue"
        },
        "name": {
          "type": "string",
          "title": "The name of the Manifest"
        },
        "node_selector": {
          "title": "NodeSelector used for Kubernetes Deployment YAML",
          "$ref": "#/definitions/typesJSONValue"
        },
        "repo": {
          "type": "string",
          "title": "repo holding Values, Services and Ingress elements"
        },
        "resources": {
          "title": "Resources used for Kubernetes Deployment YAML",
          "$ref": "#/definitions/typesJSONValue"
        },
        "services": {
          "title": "Services used for Kubernetes Service YAML",
          "$ref": "#/definitions/typesJSONValue"
        },
        "tolerations": {
          "title": "Tolerations used for Kubernetes Deployment YAML",
          "$ref": "#/definitions/typesJSONValue"
        },
        "values": {
          "title": "Values used for Kubernetes ConfigMap YAML",
          "$ref": "#/definitions/typesJSONValue"
        },
        "vault": {
          "title": "Vault used by this Manifest",
          "$ref": "#/definitions/cmdbVault"
        },
        "vault_id": {
          "description": "The resource identifier.",
          "type": "string"
        }
      }
    },
    "cmdbProvider": {
      "type": "string",
      "default": "UNKNOWN_PROVIDER",
      "enum": [
        "UNKNOWN_PROVIDER",
        "AWS",
        "AZURE",
        "GCP",
        "EQUINIX"
      ]
    },
    "cmdbReadApplicationResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbApplication"
        }
      }
    },
    "cmdbReadArtifactResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbArtifact"
        }
      }
    },
    "cmdbReadAwsRdsInstanceResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbAwsRdsInstance"
        }
      }
    },
    "cmdbReadAwsServiceResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbAwsService"
        }
      }
    },
    "cmdbReadCloudProviderResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbCloudProvider"
        }
      }
    },
    "cmdbReadContainerResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbContainer"
        }
      }
    },
    "cmdbReadDeploymentResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbDeployment"
        }
      }
    },
    "cmdbReadEnvironmentResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbEnvironment"
        }
      }
    },
    "cmdbReadKubeClusterResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbKubeCluster"
        }
      }
    },
    "cmdbReadManifestResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbManifest"
        }
      }
    },
    "cmdbReadRegionResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbRegion"
        }
      }
    },
    "cmdbReadSecretResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbSecret"
        }
      }
    },
    "cmdbReadVaultResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbVault"
        }
      }
    },
    "cmdbReadVersionTagResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbVersionTag"
        }
      }
    },
    "cmdbRegion": {
      "type": "object",
      "title": "--------------------------------------------------------------------\nRegion represents a particular Geo for Cloud Provier e.g. us-east-1\n--------------------------------------------------------------------",
      "properties": {
        "cloud_provider_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "The description of the Region"
        },
        "environments": {
          "type": "array",
          "title": "Environment",
          "items": {
            "$ref": "#/definitions/cmdbEnvironment"
          }
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the Region"
        }
      }
    },
    "cmdbSecret": {
      "type": "object",
      "title": "--------------------------------------------------------\nSecret represents confidential data stored in the Vault\n--------------------------------------------------------",
      "properties": {
        "aws_rds_instance_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "The description of the container"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "key": {
          "type": "string",
          "title": "The key value of secret (note: value is stored on kubernetes secret"
        },
        "name": {
          "type": "string",
          "title": "The name of the container"
        },
        "type": {
          "type": "string",
          "title": "The type of secret (e.g. opaque, or tls)"
        },
        "vault_id": {
          "description": "The resource identifier.",
          "type": "string"
        }
      }
    },
    "cmdbStage": {
      "type": "string",
      "default": "UNKNOWN_STAGE",
      "enum": [
        "UNKNOWN_STAGE",
        "DEV",
        "QA",
        "QAFUNC",
        "QAPERF",
        "PREPROD",
        "PROD"
      ]
    },
    "cmdbUpdateApplicationResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbApplication"
        }
      }
    },
    "cmdbUpdateArtifactResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbArtifact"
        }
      }
    },
    "cmdbUpdateAwsRdsInstanceResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbAwsRdsInstance"
        }
      }
    },
    "cmdbUpdateAwsServiceResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbAwsService"
        }
      }
    },
    "cmdbUpdateCloudProviderResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbCloudProvider"
        }
      }
    },
    "cmdbUpdateContainerResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbContainer"
        }
      }
    },
    "cmdbUpdateDeploymentResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbDeployment"
        }
      }
    },
    "cmdbUpdateEnvironmentResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbEnvironment"
        }
      }
    },
    "cmdbUpdateKubeClusterResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbKubeCluster"
        }
      }
    },
    "cmdbUpdateManifestResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbManifest"
        }
      }
    },
    "cmdbUpdateRegionResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbRegion"
        }
      }
    },
    "cmdbUpdateSecretResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbSecret"
        }
      }
    },
    "cmdbUpdateVaultResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbVault"
        }
      }
    },
    "cmdbUpdateVersionTagResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cmdbVersionTag"
        }
      }
    },
    "cmdbVault": {
      "type": "object",
      "title": "------------------------------------------------------\nVault represents the store for keeping Secrets\n------------------------------------------------------",
      "properties": {
        "description": {
          "type": "string",
          "title": "The description of the vault"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the vault"
        },
        "path": {
          "type": "string",
          "title": "The path on vault for the Secrets (e.g. /qa0-secrets)"
        },
        "secrets": {
          "type": "array",
          "title": "The list of Secrets stored against the path on vault",
          "items": {
            "$ref": "#/definitions/cmdbSecret"
          }
        }
      }
    },
    "cmdbVersionResponse": {
      "type": "object",
      "title": "---------------------------------\nCMDB Application Version\n---------------------------------",
      "properties": {
        "version": {
          "type": "string"
        }
      }
    },
    "cmdbVersionTag": {
      "type": "object",
      "title": "------------------------------------------------------\nVersionTag represents a tag on git repo\n------------------------------------------------------",
      "properties": {
        "artifacts": {
          "type": "array",
          "title": "The list of Artifacts that are versioned by this tag",
          "items": {
            "$ref": "#/definitions/cmdbArtifact"
          }
        },
        "description": {
          "type": "string",
          "title": "The description of the container"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the container"
        },
        "version": {
          "type": "string",
          "title": "The version based on SemVer (e.g. 0.0.4)"
        }
      }
    },
    "typesJSONValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}